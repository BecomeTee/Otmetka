@page "/Classes"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Net
@using System.Threading.Tasks

<form class="input-group" @onsubmit="PerformSearch">
    <input type="text" class="form-control" @bind="searchText" placeholder="Поиск" aria-label="Search" aria-describedby="button-addon2">
    <button type="submit" class="btn btn-outline-secondary" id="button-addon2" style="width: 100px;">
        <i class="material-icons">найти</i>
    </button>
</form>

@if (searchResults == null)
{
    <h1>Расписание:</h1>
    @foreach (var classInfo in searchResults)
    {
        <table class="table table-bordered">
            <tbody>
                <tr>
                <tr>
                    <td colspan="5" style="background-color: #f2f2f2; text-align: center;">@classInfo.DateStart.ToString("dd.MM.yyyy")</td>
                </tr>

                </tr>
                <tr>
                    <td style="text-align: center;">@classInfo.DateStart.ToString("HH:mm") - @classInfo.DateFinish.ToString("HH:mm")</td>
                    <td style="text-align: center;">@classInfo.Name</td>
                    <td style="text-align: center;"> Ауд. @classInfo.Room</td>
                    <td style="text-align: center;">@classInfo.Teacher</td>
                    
                </tr>
            </tbody>
        </table>
    }
}
else
{
    <p>Введите id занятия</p>
    @* <table class="table table-bordered">
        <tbody>
            <tr>
            <tr>
                <td colspan="5" style="background-color: #f2f2f2; text-align: center;">15.01.2024</td>
            </tr>

            </tr>
            <tr>
                <td style="text-align: center;">09.00 - 10.35</td>
                <td style="text-align: center;">Математика</td>
                <td style="text-align: center;"> Ауд. 200</td>
                <td style="text-align: center;">Лабковская Р.Я.</td>
                <td style="text-align: center;">
                    <span>Посетил занятие</span>
                </td>
            </tr>
        </tbody>
    </table>*@
}




@code {
    Guid searchText;
    bool isSearching = false;
    bool isValidInput = true;
    List<(string Name, DateTime DateStart, DateTime DateFinish, int Room, string Teacher)> searchResults = new List<(string Name, DateTime DateStart, DateTime DateFinish, int Room, string Teacher)>();


    [Inject]
    HttpClient HttpClient { get; set; }

    async Task PerformSearch()
    {
        try
        {

            isSearching = true; // Устанавливаем флаг поиска
            Guid searchParams = searchText;


            Guid id = searchParams;

            HttpResponseMessage response = await HttpClient.GetAsync($"https://localhost:7112/api/Class/{id}");

            if (response.IsSuccessStatusCode)
            {
                var classResponses = await response.Content.ReadFromJsonAsync<List<ClassDto>>();
                searchResults = classResponses.Select(sr => (sr.Name, sr.DateStart, sr.DateFinish, sr.Room, sr.Teacher)).ToList();
                isValidInput = true;
            }
            else if (response.StatusCode == HttpStatusCode.NotFound)
            {
                searchResults.Clear();
                isValidInput = true;
            }
    
            isSearching = false; // Устанавливаем флаг окончания поиска
            
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка: {ex.Message}");
            // Обработка исключения
            isSearching = false; // Устанавливаем флаг окончания поиска при ошибке
        }
    }
}
